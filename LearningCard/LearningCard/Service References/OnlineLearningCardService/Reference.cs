//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LearningCard.OnlineLearningCardService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventDataType", Namespace="http://schemas.datacontract.org/2004/07/LearningCard.Model")]
    [System.SerializableAttribute()]
    public partial class EventDataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventMessage {
            get {
                return this.EventMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.EventMessageField, value) != true)) {
                    this.EventMessageField = value;
                    this.RaisePropertyChanged("EventMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OnlineLearningCardService.IOnlineLobbyService", CallbackContract=typeof(LearningCard.OnlineLearningCardService.IOnlineLobbyServiceCallback))]
    public interface IOnlineLobbyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineLobbyService/JoinToLobby", ReplyAction="http://tempuri.org/IOnlineLobbyService/JoinToLobbyResponse")]
        void JoinToLobby(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineLobbyService/JoinToLobby", ReplyAction="http://tempuri.org/IOnlineLobbyService/JoinToLobbyResponse")]
        System.Threading.Tasks.Task JoinToLobbyAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOnlineLobbyService/NotifyServer")]
        void NotifyServer(LearningCard.OnlineLearningCardService.EventDataType eventData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOnlineLobbyService/NotifyServer")]
        System.Threading.Tasks.Task NotifyServerAsync(LearningCard.OnlineLearningCardService.EventDataType eventData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineLobbyService/GetActiveUsers", ReplyAction="http://tempuri.org/IOnlineLobbyService/GetActiveUsersResponse")]
        string[] GetActiveUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineLobbyService/GetActiveUsers", ReplyAction="http://tempuri.org/IOnlineLobbyService/GetActiveUsersResponse")]
        System.Threading.Tasks.Task<string[]> GetActiveUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineLobbyService/GetPublicIP", ReplyAction="http://tempuri.org/IOnlineLobbyService/GetPublicIPResponse")]
        string GetPublicIP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineLobbyService/GetPublicIP", ReplyAction="http://tempuri.org/IOnlineLobbyService/GetPublicIPResponse")]
        System.Threading.Tasks.Task<string> GetPublicIPAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOnlineLobbyServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOnlineLobbyService/BroadcastToClient")]
        void BroadcastToClient(LearningCard.OnlineLearningCardService.EventDataType eventData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOnlineLobbyServiceChannel : LearningCard.OnlineLearningCardService.IOnlineLobbyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OnlineLobbyServiceClient : System.ServiceModel.DuplexClientBase<LearningCard.OnlineLearningCardService.IOnlineLobbyService>, LearningCard.OnlineLearningCardService.IOnlineLobbyService {
        
        public OnlineLobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public OnlineLobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public OnlineLobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OnlineLobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OnlineLobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void JoinToLobby(string name) {
            base.Channel.JoinToLobby(name);
        }
        
        public System.Threading.Tasks.Task JoinToLobbyAsync(string name) {
            return base.Channel.JoinToLobbyAsync(name);
        }
        
        public void NotifyServer(LearningCard.OnlineLearningCardService.EventDataType eventData) {
            base.Channel.NotifyServer(eventData);
        }
        
        public System.Threading.Tasks.Task NotifyServerAsync(LearningCard.OnlineLearningCardService.EventDataType eventData) {
            return base.Channel.NotifyServerAsync(eventData);
        }
        
        public string[] GetActiveUsers() {
            return base.Channel.GetActiveUsers();
        }
        
        public System.Threading.Tasks.Task<string[]> GetActiveUsersAsync() {
            return base.Channel.GetActiveUsersAsync();
        }
        
        public string GetPublicIP() {
            return base.Channel.GetPublicIP();
        }
        
        public System.Threading.Tasks.Task<string> GetPublicIPAsync() {
            return base.Channel.GetPublicIPAsync();
        }
    }
}
